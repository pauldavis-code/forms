{"version":3,"sources":["util/user/API.js","components/Form/index.js","components/Button/index.js","components/Signup/index.js","components/Login/index.js","pages/homepage.js","pages/dashboard.js","components/Navbar/index.js","App.js","registerServiceWorker.js","index.js"],"names":["API","createNewUser","userData","axios","post","findCurrentUser","findFormIDs","userID","Input","props","react_default","a","createElement","className","Object","assign","SubmitBtn","Signup","state","username","password","handleInputChange","event","_event$target","target","name","value","_this","setState","defineProperty","handleFormSubmit","preventDefault","length","APIUser","then","res","this","onChange","placeholder","type","onClick","Component","Login","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","console","log","data","id","updateUser","loggedIn","catch","error","react_router","to","pathname","Homepage","isLoggedIn","components_Signup","components_Login","Dashboard","findForms","ownedForms","owned","borrowedForms","borrowed","loaded","err","map","forms","Navbar","logout","response","status","logOutButton","App","userObj","getUser","_this2","get","user","_id","_this3","components_Navbar","exact","path","render","homepage","dashboard","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","ReactDOM","react_router_dom","src_App","document","getElementById","URL","process","origin","addEventListener","concat","fetch","headers","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.acbfb4b2.chunk.js","sourcesContent":["import axios from \"axios\";\n\nexport default {\n  createNewUser: function(userData) {\n    return axios.post(\"/api/users/signup\", userData)\n  },\n  findCurrentUser: function(userData) {\n    return axios.post(\"/api/users/login\", userData)\n  },\n  findFormIDs: function(userID) {\n    return axios.post(\"/api/users/forms\", userID)\n  }\n}","import React from \"react\";\n\nexport function Input(props) {\n  return(\n    <div className=\"form-group\">\n      <input className=\"form-control\" {...props}></input>\n    </div>\n  )\n}","import React from \"react\";\n\nexport function SubmitBtn(props) {\n  return(\n    <button className=\"btn btn-primary\" {...props}></button>\n  )\n}","import React, { Component } from \"react\";\nimport APIUser from \"./../../util/user/API\";\n\nimport { Input } from \"./../Form\"\nimport { SubmitBtn } from \"./../Button\"\n\nclass Signup extends Component {\n  state = {\n    username: \"\",\n    password: \"\"\n  }\n\n  handleInputChange = event => {\n    const { name, value } = event.target;\n    this.setState({\n      [name]: value\n    })\n  }\n\n  handleFormSubmit = event => {\n    event.preventDefault();\n    if(this.state.username.length > 5) {\n      APIUser.createNewUser({\n        username: this.state.username,\n        password: this.state.password\n      })\n      .then(res => this.setState({\n        username: \"\",\n        password: \"\"\n      }))\n    }\n  }\n\n  render() {\n    return(\n      <div className=\"col-6\">\n        <h3>Make a new account</h3>\n        <Input \n          value={this.state.username}\n          onChange={this.handleInputChange}\n          name=\"username\"\n          placeholder=\"Enter your username\"\n        />\n\n        <Input \n          value={this.state.password}\n          onChange={this.handleInputChange}\n          name=\"password\"\n          placeholder=\"Enter your password\"\n          type=\"password\"\n        />\n\n        <SubmitBtn \n          type=\"submit\" \n          onClick={this.handleFormSubmit}>\n            Submit Form\n        </SubmitBtn>\n      </div>\n    );\n  };\n};\n\nexport default Signup;","import React, { Component } from \"react\";\nimport APIUser from \"./../../util/user/API\";\nimport { Redirect } from \"react-router-dom\";\n\nimport { Input } from \"./../Form\"\nimport { SubmitBtn } from \"./../Button\"\n\nclass Login extends Component {\n  constructor() {\n    super()\n    this.state = {\n      username: \"\",\n      password: \"\",\n      id: \"\",\n    };\n  };\n\n  handleInputChange = event => {\n    const { name, value } = event.target;\n    this.setState({\n      [name]: value\n    })\n  }\n\n  handleFormSubmit = event => {\n    event.preventDefault();\n    if(this.state.username.length > 5) {\n      APIUser.findCurrentUser({\n        username: this.state.username,\n        password: this.state.password\n      })\n      .then(res => {\n        console.log(\"Logged in\")\n        console.log(\"response: \" + res.data.id)\n        this.setState({\n          username: \"\",\n          password: \"\",\n          id: res.data.id\n        });\n        this.props.updateUser({\n          loggedIn: true,\n          username: res.data.username,\n          id: res.data.id\n        })\n        // console.log(res)\n      }).catch(error => {\n        console.log(\"log in error: \" + error)\n      })\n    }\n  }\n\n  render() {\n    if (this.state.id) {\n      console.log(\"redirect\")\n      return <Redirect to={{ pathname: \"/dashboard/\" + this.state.id}} />\n    } else {\n      return(\n        <div className=\"col-6\">\n          <h3>or Login</h3>\n          <Input \n            value={this.state.username}\n            onChange={this.handleInputChange}\n            name=\"username\"\n            placeholder=\"Enter your username\"\n          />\n\n          <Input \n            value={this.state.password}\n            onChange={this.handleInputChange}\n            name=\"password\"\n            placeholder=\"Enter your password\"\n            type=\"password\"\n          />\n\n          <SubmitBtn \n            type=\"submit\" \n            onClick={this.handleFormSubmit}>\n              Submit Form\n          </SubmitBtn>\n        </div>\n      );\n    }\n  };\n};\n\nexport default Login;","import React, { Component } from \"react\";\nimport { Redirect } from \"react-router-dom\";\n\nimport Signup from \"../components/Signup\";\nimport Login from \"../components/Login\"\n\nclass Homepage extends Component {\n  componentDidMount() {\n  }\n  render() {\n    if (!this.props.isLoggedIn) {\n      return(\n        <div>\n          <h1>Welcome to the homepage!</h1>\n\n          <div className=\"row mt-4\">\n            <Signup />\n            <Login \n              updateUser={this.props.updateUser}\n            />\n          </div>\n        </div>\n      );\n    } else {\n      return <Redirect to={{pathname: \"/dashboard/\" + this.props.id}} />\n    }\n  };\n};\n\nexport default Homepage;","import React, { Component } from \"react\";\n// import { Redirect } from \"react-router-dom\";\n\nimport APIUser from \"./../util/user/API\"\n\nclass Dashboard extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      id: null,\n      ownedForms: null,\n      borrowedForms: null,\n      loaded: false\n    }\n  }\n\n  componentDidUpdate() {\n    console.log(this.props.id)\n    this.findForms(this.props.id)\n  }\n  \n  findForms = (id) => {\n    APIUser.findFormIDs(id)\n    .then(res => {\n      console.log(res.data)\n      this.setState({\n        ownedForms: res.data.owned,\n        borrowedForms: res.data.borrowed,\n        loaded: true\n      })\n      console.log(this.state.ownedForms)\n    })\n    .catch(err => console.log(\"ERROR: \" + err ))\n  }\n  \n  render() {\n    return(\n      <div>\n        <h1> hello, {this.props.username} ({this.props.id})! </h1>\n        { this.state.ownedForms ? \n          ( this.state.ownedForms.map(forms => <h3>forms</h3>)\n          ) : ( \n            <h3>no forms</h3> \n          )\n        }\n        <h2>Hello</h2>\n      </div>\n    )\n  }\n\n}\n\nexport default Dashboard;","import React, { Component } from \"react\";\n\nimport axios from \"axios\";\n\n\nclass Navbar extends Component {\n\n  logOutButton() {\n    if (!this.props.state) {\n      return <button type=\"button\" className=\"btn btn-primary float-right\" onClick={this.logout}>Log Out</button>\n    }\n  }\n\n  logout(event) {\n    event.preventDefault()\n    console.log('logging out')\n    axios.post('/api/user/logout').then(response => {\n      console.log(response.data)\n      if (response.status === 200) {\n        this.props.updateUser({\n          loggedIn: false,\n          username: null\n        })\n      }\n    }).catch(error => {\n        console.log('Logout error:')\n        console.log(error)\n    })\n  }\n\n\n  render() {\n    return(\n      <nav className=\"navbar navbar-light bg-light\">\n        <span className=\"navbar-brand mb-0 h1\">Navbar</span>\n        {this.logOutButton()}\n      </nav>\n    )\n  }\n}\n\nexport default Navbar;\n","import React, { Component } from \"react\";\nimport {Route} from \"react-router-dom\";\n\nimport Homepage from \"./pages/homepage\";\nimport Dashboard from \"./pages/dashboard\";\nimport Navbar from \"./components/Navbar\"\n\nimport axios from \"axios\";\n\nclass App extends Component {\n  constructor() {\n    super()\n    this.state = {\n      isLoggedIn: false,\n      username: null,\n      id: null\n    };\n  };\n\n  componentDidMount() {\n    this.getUser()\n  }\n\n  getUser() {\n    axios.get('/api/users/find').then(response => {\n      console.log('Get user response: ')\n      // console.log(response.data)\n      if (response.data.user) {\n        console.log('Get User: There is a user saved in the server session: ')\n        this.setState({\n          isLoggedIn: true,\n          username: response.data.user.username,\n          id: response.data.user._id\n        })\n      } else {\n        console.log('Get user: no user');\n        this.setState({\n          isLoggedIn: false,\n          username: null,\n          id: null\n        })\n      }\n    })\n  }\n\n  updateUser = (userObj) => {\n    this.setState(userObj)\n    console.log(\"logged in as: \" + this.state.username)\n  }\n\n\n  render() {\n      return (\n        <div>\n          <Navbar state={this.state.isLoggedIn} updateUser={this.updateUser}/>\n          <div className=\"container-fluid\">\n            <Route \n              exact path=\"/\"\n              render={ (props) => <Homepage isLoggedIn={this.state.isLoggedIn} updateUser={this.updateUser} id={this.state.id}/>}\n            />\n            <Route \n              exact path=\"/dashboard/:id\"\n              render={ () => <Dashboard isLoggedIn={this.state.isLoggedIn} username={this.state.username} id={this.state.id}/> }\n            />\n          </div>\n        </div>\n      );\n    }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (!isLocalhost) {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      } else {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log(\"New content is available; please refresh.\");\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get(\"content-type\").indexOf(\"javascript\") === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter as Router} from 'react-router-dom' //don't need to specify localhost url in axios http address\nimport App from \"./App\";\nimport registerServiceWorker from \"./registerServiceWorker\";\n\nReactDOM.render(\n<Router>\n  <App /> \n</Router>,\ndocument.getElementById(\"root\"));\nregisterServiceWorker();\n"],"sourceRoot":""}